import os
import asyncio
import logging
from aiogram import Bot, Dispatcher, types, F, Router
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, FSInputFile

# –ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –≤—Ä—É—á–Ω—É—é –¥–ª—è —Ç–µ—Å—Ç–æ–≤ (–ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è)
API_TOKEN = os.getenv("API_TOKEN") 
ADMIN_ID = os.getenv("ADMIN_ID")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher()
router = Router()
dp.include_router(router)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üì± –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏", callback_data="about_app")],
    [InlineKeyboardButton(text="üíº –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ñ—Ä–∞–Ω—à–∏–∑–µ", callback_data="about_franchise")],
    [InlineKeyboardButton(text="üé• –°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ", callback_data="watch_video")],
    [InlineKeyboardButton(text="üìÑ –°–∫–∞—á–∞—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é", callback_data="download_presentation")],
    [InlineKeyboardButton(text="üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="send_request")]
])

# –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@router.message(CommandStart())
async def start_handler(message: types.Message):
    text = (
        "üì± <b>Good Day</b> ‚Äî —ç—Ç–æ –ø—Ä–æ–µ–∫—Ç —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏,\n"
        "–Ω–æ –∫–ª—é—á–µ–≤—ã–º –∏ –æ–±—ä–µ–¥–∏–Ω—è—é—â–∏–º –≤—Å—ë —è–≤–ª—è–µ—Ç—Å—è –Ω–∞—à–µ <b>–º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</b>.\n\n"
        "–ú—ã –≤—ã–±—Ä–∞–ª–∏ –∏–º–µ–Ω–Ω–æ —ç—Ç–æ—Ç —Ñ–æ—Ä–º–∞—Ç, –≤–µ–¥—å <b>—Å–º–∞—Ä—Ç—Ñ–æ–Ω ‚Äî —Å–ø—É—Ç–Ω–∏–∫ –∫–∞–∂–¥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞</b> üì≤"
    )
    await message.answer(text, parse_mode=ParseMode.HTML, reply_markup=main_menu)

# –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
@router.callback_query(F.data == "about_app")
async def about_app(callback: types.CallbackQuery):
    await callback.message.answer(
        "üì± –í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ Good Day:\n"
        "‚Ä¢ –°–∫–∏–¥–∫–∏ –∏ –∞–∫—Ü–∏–∏ –≤ –≥–æ—Ä–æ–¥–µ\n"
        "‚Ä¢ –†–µ–∫–ª–∞–º–∞ –¥–ª—è –±–∏–∑–Ω–µ—Å–æ–≤\n"
        "‚Ä¢ –£–¥–æ–±–Ω—ã–π –ø–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã\n\n"
        "üî• –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–µ–π.",
        reply_markup=main_menu
    )
    await callback.answer()

# –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ñ—Ä–∞–Ω—à–∏–∑–µ
@router.callback_query(F.data == "about_franchise")
async def about_franchise(callback: types.CallbackQuery):
    await callback.message.answer(
        "üíº –§—Ä–∞–Ω—à–∏–∑–∞ Good Day ‚Äî —ç—Ç–æ:\n"
        "‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ä–∏—Å–∫–∏\n"
        "‚Ä¢ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ—Å—Ç—å –≤ —Ä–µ–≥–∏–æ–Ω–µ\n"
        "‚Ä¢ –ì–æ—Ç–æ–≤—ã–π IT-–ø—Ä–æ–¥—É–∫—Ç\n"
        "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞, –æ–±—É—á–µ–Ω–∏–µ –∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥\n\n"
        "–¢—ã –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–µ—à—å –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –±–∏–∑–Ω–µ—Å–∞ –∫ —Ä–µ–∫–ª–∞–º–Ω—ã–º –ø–∞–∫–µ—Ç–∞–º.\n"
        "–ú—ã –ø–æ–º–æ–≥–∞–µ–º —Ç–µ–±–µ –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ –∑–∞–ø—É—Å–∫–∞.",
        reply_markup=main_menu
    )
    await callback.answer()

# –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ
@router.callback_query(F.data == "watch_video")
async def send_video(callback: types.CallbackQuery):
    video = FSInputFile("intro.mp4")
    await callback.message.answer_video(video=video, caption="üé¨ –ü–æ—Å–º–æ—Ç—Ä–∏ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤–∏–¥–µ–æ –æ –ø—Ä–æ–µ–∫—Ç–µ Good Day!", reply_markup=main_menu)
    await callback.answer()

# –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏
@router.callback_query(F.data == "download_presentation")
async def send_presentation(callback: types.CallbackQuery):
    doc = FSInputFile("presentation.pdf")
    await callback.message.answer_document(document=doc, caption="üìÑ –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è —Ñ—Ä–∞–Ω—à–∏–∑—ã Good Day", reply_markup=main_menu)
    await callback.answer()

# –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
@router.callback_query(F.data == "send_request")
async def send_request(callback: types.CallbackQuery):
    user = callback.from_user
    text = (
        f"üì¨ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!\n\n"
        f"–ò–º—è: {user.full_name}\n"
        f"–Æ–∑–µ—Ä–Ω–µ–π–º: @{user.username if user.username else '–Ω–µ—Ç'}\n"
        f"ID: {user.id}"
    )
    if ADMIN_ID:
        await bot.send_message(chat_id=int(ADMIN_ID), text=text)
    await callback.message.answer("‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å —Ç–æ–±–æ–π –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.", reply_markup=main_menu)
    await callback.answer()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
